apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dashboard
  namespace: beta
  labels:
    app: traefik
spec:
  entryPoints:
    - traefik
  routes:
    - match: PathPrefix(`/dashboard`) || PathPrefix(`/api`)
      kind: Rule
      services:
        - name: api@internal
          serversTransport: TraefikService
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: ingresshttp
  namespace: beta

spec:
  entryPoints:
    - web
#    - websecure
  routes:
    - match: Host(`kuberodo.ddns.net`)
      kind: Rule
      priority: 1
      # defining several services is possible and allowed, but for now the servers of
      # all the services (for a given route) get merged altogether under the same
      # load-balancing strategy.
      services:
        - name: hello-rodo-servicev2
          port: 1234
          # strategy defines the load balancing strategy between the servers. It defaults
          # to Round Robin, and for now only Round Robin is supported anyway.
          strategy: RoundRobin
    - match: Host(`rodo.zapto.org`)
      kind: Rule
      priority: 1
      services:
        - name: hello-rodo-service
          port: 1234
  #    - match: PathPrefix(`/lb`)
  #      kind: Rule
  #      services:
  #        - name: wrr1
  #          kind: TraefikService
  # use an empty tls object for TLS with Let's Encrypt
#  tls:
#    certresolver: supersecret
#    options:
#      name: my-tls-option
#      namespace: default

---
#apiVersion: traefik.io/v1alpha1
#kind: ServersTransportTCP
#metadata:
#  name: mytransport
#  namespace: beta
#
#spec:
#  tls:
#    insecureSkipVerify: true

---
apiVersion: traefik.io/v1alpha1
kind: IngressRouteTCP
metadata:
  name: ingresstcp
  namespace: beta
  labels:
    app: traefik
spec:
  entryPoints:
    - tcp
  routes:
    - match: HostSNI(`*`)
      services:
        - name: hello-tcp-rodo
          port: 1234

  tls:
    certResolver: myresolver
    passthrough: false

